generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Department {
  id    Int    @id @default(autoincrement())
  name  String @unique
  teams Team[]
}

model Team {
  id           Int        @id @default(autoincrement())
  name         String
  departmentId Int
  roles        Role[]
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)

  @@unique([name, departmentId])
  @@index([departmentId], map: "Team_departmentId_fkey")
}

model Role {
  id        Int        @id @default(autoincrement())
  name      String
  teamId    Int
  employees Employee[]
  team      Team       @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@unique([name, teamId])
  @@index([teamId], map: "Role_teamId_fkey")
}

model Employee {
  id      Int      @id @default(autoincrement())
  number  String   @unique
  roleId  Int
  address Address?
  role    Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  profile Profile?

  @@unique([number, roleId])
  @@index([roleId], map: "Employee_roleId_fkey")
}

model Profile {
  id         Int      @id @default(autoincrement())
  bio        String?
  employeeId Int      @unique
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model Address {
  id         Int      @id @default(autoincrement())
  street     String
  city       String
  country    String
  employeeId Int      @unique
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}
